import nltk
import spacy
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from collections import defaultdict


nltk.download('punkt')
nltk.download('stopwords')


nlp = spacy.load('en_core_web_sm')


response_bank = {
    "hello": "Hi there! How can I assist you today?",
    "weather": "I can't provide the weather update right now, but you can check weather apps for the latest info.",
    "name": "I am your AI chatbot, here to help you.",
    "bye": "Goodbye! Have a great day!",
}

def preprocess_user_input(user_input):
    """Preprocess user input by tokenizing, removing stopwords, and lemmatizing."""
   
    stop_words = set(stopwords.words("english"))
    tokens = word_tokenize(user_input.lower())
    filtered_tokens = [word for word in tokens if word not in stop_words]
    
  
    doc = nlp(" ".join(filtered_tokens))
    lemmatized_tokens = [token.lemma_ for token in doc]
    return lemmatized_tokens

def generate_response(user_input):
    """Generate a response based on predefined responses."""
    processed_input = preprocess_user_input(user_input)
    
   
    for keyword, response in response_bank.items():
        if keyword in processed_input:
            return response
    
  
    return "I'm sorry, I didn't understand that. Can you please rephrase?"

def chatbot():
    """Main function to run the chatbot."""
    print("Chatbot: Hello! I am your AI assistant. Type 'exit' to end the chat.")
    while True:
        user_input = input("You: ")
        if user_input.lower() in ["exit", "quit", "bye"]:
            print("Chatbot: Goodbye!")
            break
        response = generate_response(user_input)
        print(f"Chatbot: {response}")

if __name__ == "__main__":
    chatbot()
